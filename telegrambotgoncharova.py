import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.utils import executor

API_TOKEN = '7099011946:AAEiH47rm2TPRt29Dx9P9UdvgUSexe5p8pE'
CHANNEL = '@mamadoctorgonchrovabot'
PDF_FILE = '10_–ø–æ–ª–µ–∑–Ω—ã—Ö_–ø—Ä–∏–≤—ã—á–µ–∫_–¥–ª—è_—Ä–æ–¥–∏—Ç–µ–ª–µ–π_–Ω–æ–≤–æ–≥–æ_–ø–æ–∫–æ–ª–µ–Ω–∏—è_2.pdf'

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

check_subscription_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ PDF, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: {CHANNEL}\n\n"
        f"–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=check_subscription_kb
    )

@dp.callback_query_handler(lambda c: c.data == 'check_sub')
async def check_subscription(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    try:
        member = await bot.get_chat_member(CHANNEL, user_id)
        if member.status in ['member', 'creator', 'administrator']:
            await bot.answer_callback_query(callback_query.id)
            await bot.send_message(user_id, "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–æ–∫—É–º–µ–Ω—Ç‚Ä¶")
            doc = InputFile(PDF_FILE)
            await bot.send_document(user_id, doc)
        else:
            await bot.answer_callback_query(callback_query.id)
            await bot.send_message(user_id, f"‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {CHANNEL}. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –µ—â—ë —Ä–∞–∑.")
    except Exception as e:
        await bot.send_message(user_id, "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª –∏ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ –±–æ—Ç –≤ –∞–¥–º–∏–Ω—ã.")
        print(e)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
